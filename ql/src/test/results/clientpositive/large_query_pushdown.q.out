PREHOOK: query: CREATE TABLE `wt`(
  `col0` string,
  `col1` string,
  `col2` int,
  `col3` string,
  `col4` string,
  `col5` string,
  `col6` string,
  `col7` string,
  `col8` string,
  `col9` string,
  `col10` string,
  `col11` string,
  `col12` string,
  `col13` string,
  `col14` string)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@wt
POSTHOOK: query: CREATE TABLE `wt`(
  `col0` string,
  `col1` string,
  `col2` int,
  `col3` string,
  `col4` string,
  `col5` string,
  `col6` string,
  `col7` string,
  `col8` string,
  `col9` string,
  `col10` string,
  `col11` string,
  `col12` string,
  `col13` string,
  `col14` string)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@wt
PREHOOK: query: CREATE TABLE `tbl1`(
  `col2` bigint,
  `col4` string,
  `col5` string)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@tbl1
POSTHOOK: query: CREATE TABLE `tbl1`(
  `col2` bigint,
  `col4` string,
  `col5` string)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@tbl1
PREHOOK: query: CREATE TABLE `tbl2`(
  `col2` bigint,
  `col4` string,
  `col5` string)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@tbl2
POSTHOOK: query: CREATE TABLE `tbl2`(
  `col2` bigint,
  `col4` string,
  `col5` string)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@tbl2
PREHOOK: query: CREATE TABLE `tbl3`(
  `col4` string,
  `col5` string,
  `col6` string)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@tbl3
POSTHOOK: query: CREATE TABLE `tbl3`(
  `col4` string,
  `col5` string,
  `col6` string)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@tbl3
PREHOOK: query: CREATE TABLE `tbl4`(
  `col1` string,
  `col2` string,
  `col4` string,
  `col5` string)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@tbl4
POSTHOOK: query: CREATE TABLE `tbl4`(
  `col1` string,
  `col2` string,
  `col4` string,
  `col5` string)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@tbl4
PREHOOK: query: CREATE TABLE `tbl5`(
  `col1` string,
  `col2` string,
  `col4` string,
  `col5` string)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@tbl5
POSTHOOK: query: CREATE TABLE `tbl5`(
  `col1` string,
  `col2` string,
  `col4` string,
  `col5` string)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@tbl5
PREHOOK: query: CREATE TABLE `tbl6`(
  `col2` string,
  `col4` string,
  `col5` string)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@tbl6
POSTHOOK: query: CREATE TABLE `tbl6`(
  `col2` string,
  `col4` string,
  `col5` string)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@tbl6
PREHOOK: query: explain
select count(*)
from wt wide_tbl
inner join (
  select 
  `a`.`col2`,
  `a`.`col4`,
  `a`.`col5`
  from `tbl1` `a`
  where `a`.`col4`='string1' and `a`.`col5`='string2'
  union all
  select
  `b`.`col2`,
  `b`.`col4`,
  `b`.`col5`
  from `tbl2` `b`
  where `b`.`col4`='string1' and `b`.`col5`='string2') union_tbl on
                union_tbl.col2=wide_tbl.col2
                and union_tbl.col4=wide_tbl.col4
                and union_tbl.col5=wide_tbl.col5
left join tbl5 tbl5_0 on
                tbl5_0.col2=wide_tbl.col0
                and tbl5_0.col1='string0'
                and tbl5_0.col4=wide_tbl.col4
                and tbl5_0.col5=wide_tbl.col5
left join tbl6 tbl6_0 on
                tbl6_0.col2=wide_tbl.col0
                and tbl6_0.col4=wide_tbl.col4
                and tbl6_0.col5=wide_tbl.col5
left join tbl3 tbl3_0 on
                tbl3_0.col6=wide_tbl.col6
                and tbl3_0.col4=wide_tbl.col4
                and tbl3_0.col5=wide_tbl.col5
left join tbl4 tbl4_0 on
                tbl4_0.col2=wide_tbl.col1
                and tbl4_0.col1='string0'
                and tbl4_0.col4=wide_tbl.col4
                and tbl4_0.col5=wide_tbl.col5
left join tbl5 tbl5_1 on
                tbl5_1.col2=wide_tbl.col7
                and tbl5_1.col1='string0'
                and tbl5_1.col4=wide_tbl.col4
                and tbl5_1.col5=wide_tbl.col5
left join tbl5 tbl5_2 on
                tbl5_2.col2=wide_tbl.col8
                and tbl5_2.col1='string0'
                and tbl5_2.col4=wide_tbl.col4
                and tbl5_2.col5=wide_tbl.col5
left join tbl5 tbl5_3 on
                tbl5_3.col2=wide_tbl.col9
                and tbl5_3.col1='string0'
                and tbl5_3.col4=wide_tbl.col4
                and tbl5_3.col5=wide_tbl.col5
left join tbl5 tbl5_4 on
                tbl5_4.col2=wide_tbl.col10
                and tbl5_4.col1='string0'
                and tbl5_4.col4=wide_tbl.col4
                and tbl5_4.col5=wide_tbl.col5
left join tbl5 tbl5_5 on
                tbl5_5.col2=wide_tbl.col11
                and tbl5_5.col1='string0'
                and tbl5_5.col4=wide_tbl.col4
                and tbl5_5.col5=wide_tbl.col5
left join tbl5 tbl5_6 on
                tbl5_6.col2=wide_tbl.col12
                and tbl5_6.col1='string0'
                and tbl5_6.col4=wide_tbl.col4
                and tbl5_6.col5=wide_tbl.col5
left join tbl5 tbl5_7 on
                tbl5_7.col2=wide_tbl.col13
                and tbl5_7.col1='string0'
                and tbl5_7.col4=wide_tbl.col4
                and tbl5_7.col5=wide_tbl.col5
left join tbl5 tbl5_8 on
                tbl5_8.col2=wide_tbl.col14
                and tbl5_8.col1='string0'
                and tbl5_8.col4=wide_tbl.col4
                and tbl5_8.col5=wide_tbl.col5
left join tbl5 tbl5_9 on
                tbl5_9.col2=wide_tbl.col3
                and tbl5_9.col1='string0'
                and tbl5_9.col4=wide_tbl.col4
                and tbl5_9.col5=wide_tbl.col5
where wide_tbl.col4='string1' and wide_tbl.col5='string1'
PREHOOK: type: QUERY
POSTHOOK: query: explain
select count(*)
from wt wide_tbl
inner join (
  select 
  `a`.`col2`,
  `a`.`col4`,
  `a`.`col5`
  from `tbl1` `a`
  where `a`.`col4`='string1' and `a`.`col5`='string2'
  union all
  select
  `b`.`col2`,
  `b`.`col4`,
  `b`.`col5`
  from `tbl2` `b`
  where `b`.`col4`='string1' and `b`.`col5`='string2') union_tbl on
                union_tbl.col2=wide_tbl.col2
                and union_tbl.col4=wide_tbl.col4
                and union_tbl.col5=wide_tbl.col5
left join tbl5 tbl5_0 on
                tbl5_0.col2=wide_tbl.col0
                and tbl5_0.col1='string0'
                and tbl5_0.col4=wide_tbl.col4
                and tbl5_0.col5=wide_tbl.col5
left join tbl6 tbl6_0 on
                tbl6_0.col2=wide_tbl.col0
                and tbl6_0.col4=wide_tbl.col4
                and tbl6_0.col5=wide_tbl.col5
left join tbl3 tbl3_0 on
                tbl3_0.col6=wide_tbl.col6
                and tbl3_0.col4=wide_tbl.col4
                and tbl3_0.col5=wide_tbl.col5
left join tbl4 tbl4_0 on
                tbl4_0.col2=wide_tbl.col1
                and tbl4_0.col1='string0'
                and tbl4_0.col4=wide_tbl.col4
                and tbl4_0.col5=wide_tbl.col5
left join tbl5 tbl5_1 on
                tbl5_1.col2=wide_tbl.col7
                and tbl5_1.col1='string0'
                and tbl5_1.col4=wide_tbl.col4
                and tbl5_1.col5=wide_tbl.col5
left join tbl5 tbl5_2 on
                tbl5_2.col2=wide_tbl.col8
                and tbl5_2.col1='string0'
                and tbl5_2.col4=wide_tbl.col4
                and tbl5_2.col5=wide_tbl.col5
left join tbl5 tbl5_3 on
                tbl5_3.col2=wide_tbl.col9
                and tbl5_3.col1='string0'
                and tbl5_3.col4=wide_tbl.col4
                and tbl5_3.col5=wide_tbl.col5
left join tbl5 tbl5_4 on
                tbl5_4.col2=wide_tbl.col10
                and tbl5_4.col1='string0'
                and tbl5_4.col4=wide_tbl.col4
                and tbl5_4.col5=wide_tbl.col5
left join tbl5 tbl5_5 on
                tbl5_5.col2=wide_tbl.col11
                and tbl5_5.col1='string0'
                and tbl5_5.col4=wide_tbl.col4
                and tbl5_5.col5=wide_tbl.col5
left join tbl5 tbl5_6 on
                tbl5_6.col2=wide_tbl.col12
                and tbl5_6.col1='string0'
                and tbl5_6.col4=wide_tbl.col4
                and tbl5_6.col5=wide_tbl.col5
left join tbl5 tbl5_7 on
                tbl5_7.col2=wide_tbl.col13
                and tbl5_7.col1='string0'
                and tbl5_7.col4=wide_tbl.col4
                and tbl5_7.col5=wide_tbl.col5
left join tbl5 tbl5_8 on
                tbl5_8.col2=wide_tbl.col14
                and tbl5_8.col1='string0'
                and tbl5_8.col4=wide_tbl.col4
                and tbl5_8.col5=wide_tbl.col5
left join tbl5 tbl5_9 on
                tbl5_9.col2=wide_tbl.col3
                and tbl5_9.col1='string0'
                and tbl5_9.col4=wide_tbl.col4
                and tbl5_9.col5=wide_tbl.col5
where wide_tbl.col4='string1' and wide_tbl.col5='string1'
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-3 depends on stages: Stage-2
  Stage-4 depends on stages: Stage-3
  Stage-5 depends on stages: Stage-4
  Stage-6 depends on stages: Stage-5
  Stage-7 depends on stages: Stage-6
  Stage-8 depends on stages: Stage-7
  Stage-9 depends on stages: Stage-8
  Stage-10 depends on stages: Stage-9
  Stage-11 depends on stages: Stage-10
  Stage-12 depends on stages: Stage-11
  Stage-13 depends on stages: Stage-12
  Stage-14 depends on stages: Stage-13
  Stage-0 depends on stages: Stage-14

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: a
            Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: NONE
            Filter Operator
              predicate: false (type: boolean)
              Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: NONE
              Select Operator
                expressions: col2 (type: bigint)
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: NONE
                Union
                  Statistics: Num rows: 2 Data size: 0 Basic stats: PARTIAL Column stats: NONE
                  Reduce Output Operator
                    key expressions: _col0 (type: bigint), 'string1' (type: string), 'string2' (type: string)
                    sort order: +++
                    Map-reduce partition columns: _col0 (type: bigint), 'string1' (type: string), 'string2' (type: string)
                    Statistics: Num rows: 2 Data size: 0 Basic stats: PARTIAL Column stats: NONE
          TableScan
            alias: b
            Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: NONE
            Filter Operator
              predicate: false (type: boolean)
              Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: NONE
              Select Operator
                expressions: col2 (type: bigint)
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: NONE
                Union
                  Statistics: Num rows: 2 Data size: 0 Basic stats: PARTIAL Column stats: NONE
                  Reduce Output Operator
                    key expressions: _col0 (type: bigint), 'string1' (type: string), 'string2' (type: string)
                    sort order: +++
                    Map-reduce partition columns: _col0 (type: bigint), 'string1' (type: string), 'string2' (type: string)
                    Statistics: Num rows: 2 Data size: 0 Basic stats: PARTIAL Column stats: NONE
          TableScan
            alias: wide_tbl
            Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: NONE
            Filter Operator
              predicate: (UDFToLong(col2) is not null and (col4 = 'string1') and (col5 = 'string1')) (type: boolean)
              Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: NONE
              Reduce Output Operator
                key expressions: UDFToLong(col2) (type: bigint), 'string1' (type: string), 'string1' (type: string)
                sort order: +++
                Map-reduce partition columns: UDFToLong(col2) (type: bigint), 'string1' (type: string), 'string1' (type: string)
                Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: NONE
                value expressions: col0 (type: string), col1 (type: string), col3 (type: string), col6 (type: string), col7 (type: string), col8 (type: string), col9 (type: string), col10 (type: string), col11 (type: string), col12 (type: string), col13 (type: string), col14 (type: string)
      Reduce Operator Tree:
        Join Operator
          condition map:
               Inner Join 0 to 1
          keys:
            0 UDFToLong(col2) (type: bigint), col4 (type: string), col5 (type: string)
            1 _col0 (type: bigint), _col1 (type: string), _col2 (type: string)
          outputColumnNames: _col0, _col1, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14
          Statistics: Num rows: 2 Data size: 0 Basic stats: PARTIAL Column stats: NONE
          File Output Operator
            compressed: false
            table:
                input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe

  Stage: Stage-2
    Map Reduce
      Map Operator Tree:
          TableScan
            Reduce Output Operator
              key expressions: _col0 (type: string), _col4 (type: string), _col5 (type: string)
              sort order: +++
              Map-reduce partition columns: _col0 (type: string), _col4 (type: string), _col5 (type: string)
              Statistics: Num rows: 2 Data size: 0 Basic stats: PARTIAL Column stats: NONE
              value expressions: _col1 (type: string), _col3 (type: string), _col6 (type: string), _col7 (type: string), _col8 (type: string), _col9 (type: string), _col10 (type: string), _col11 (type: string), _col12 (type: string), _col13 (type: string), _col14 (type: string)
          TableScan
            alias: tbl5_0
            Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: NONE
            Filter Operator
              predicate: ((col1 = 'string0') and (col4 = 'string1') and (col5 = 'string1')) (type: boolean)
              Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: NONE
              Reduce Output Operator
                key expressions: col2 (type: string), col4 (type: string), col5 (type: string)
                sort order: +++
                Map-reduce partition columns: col2 (type: string), col4 (type: string), col5 (type: string)
                Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: NONE
          TableScan
            alias: tbl6_0
            Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: NONE
            Filter Operator
              predicate: ((col4 = 'string1') and (col5 = 'string1')) (type: boolean)
              Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: NONE
              Reduce Output Operator
                key expressions: col2 (type: string), col4 (type: string), col5 (type: string)
                sort order: +++
                Map-reduce partition columns: col2 (type: string), col4 (type: string), col5 (type: string)
                Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: NONE
      Reduce Operator Tree:
        Join Operator
          condition map:
               Left Outer Join0 to 1
               Left Outer Join0 to 2
          keys:
            0 _col0 (type: string), _col4 (type: string), _col5 (type: string)
            1 col2 (type: string), col4 (type: string), col5 (type: string)
            2 col2 (type: string), col4 (type: string), col5 (type: string)
          outputColumnNames: _col1, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14
          Statistics: Num rows: 4 Data size: 0 Basic stats: PARTIAL Column stats: NONE
          File Output Operator
            compressed: false
            table:
                input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe

  Stage: Stage-3
    Map Reduce
      Map Operator Tree:
          TableScan
            Reduce Output Operator
              key expressions: _col6 (type: string), _col4 (type: string), _col5 (type: string)
              sort order: +++
              Map-reduce partition columns: _col6 (type: string), _col4 (type: string), _col5 (type: string)
              Statistics: Num rows: 4 Data size: 0 Basic stats: PARTIAL Column stats: NONE
              value expressions: _col1 (type: string), _col3 (type: string), _col7 (type: string), _col8 (type: string), _col9 (type: string), _col10 (type: string), _col11 (type: string), _col12 (type: string), _col13 (type: string), _col14 (type: string)
          TableScan
            alias: tbl3_0
            Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: NONE
            Filter Operator
              predicate: ((col4 = 'string1') and (col5 = 'string1')) (type: boolean)
              Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: NONE
              Reduce Output Operator
                key expressions: col6 (type: string), col4 (type: string), col5 (type: string)
                sort order: +++
                Map-reduce partition columns: col6 (type: string), col4 (type: string), col5 (type: string)
                Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: NONE
      Reduce Operator Tree:
        Join Operator
          condition map:
               Left Outer Join0 to 1
          keys:
            0 _col6 (type: string), _col4 (type: string), _col5 (type: string)
            1 col6 (type: string), col4 (type: string), col5 (type: string)
          outputColumnNames: _col1, _col3, _col4, _col5, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14
          Statistics: Num rows: 4 Data size: 0 Basic stats: PARTIAL Column stats: NONE
          File Output Operator
            compressed: false
            table:
                input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe

  Stage: Stage-4
    Map Reduce
      Map Operator Tree:
          TableScan
            Reduce Output Operator
              key expressions: _col1 (type: string), _col4 (type: string), _col5 (type: string)
              sort order: +++
              Map-reduce partition columns: _col1 (type: string), _col4 (type: string), _col5 (type: string)
              Statistics: Num rows: 4 Data size: 0 Basic stats: PARTIAL Column stats: NONE
              value expressions: _col3 (type: string), _col7 (type: string), _col8 (type: string), _col9 (type: string), _col10 (type: string), _col11 (type: string), _col12 (type: string), _col13 (type: string), _col14 (type: string)
          TableScan
            alias: tbl4_0
            Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: NONE
            Filter Operator
              predicate: ((col1 = 'string0') and (col4 = 'string1') and (col5 = 'string1')) (type: boolean)
              Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: NONE
              Reduce Output Operator
                key expressions: col2 (type: string), col4 (type: string), col5 (type: string)
                sort order: +++
                Map-reduce partition columns: col2 (type: string), col4 (type: string), col5 (type: string)
                Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: NONE
      Reduce Operator Tree:
        Join Operator
          condition map:
               Left Outer Join0 to 1
          keys:
            0 _col1 (type: string), _col4 (type: string), _col5 (type: string)
            1 col2 (type: string), col4 (type: string), col5 (type: string)
          outputColumnNames: _col3, _col4, _col5, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14
          Statistics: Num rows: 4 Data size: 0 Basic stats: PARTIAL Column stats: NONE
          File Output Operator
            compressed: false
            table:
                input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe

  Stage: Stage-5
    Map Reduce
      Map Operator Tree:
          TableScan
            Reduce Output Operator
              key expressions: _col7 (type: string), _col4 (type: string), _col5 (type: string)
              sort order: +++
              Map-reduce partition columns: _col7 (type: string), _col4 (type: string), _col5 (type: string)
              Statistics: Num rows: 4 Data size: 0 Basic stats: PARTIAL Column stats: NONE
              value expressions: _col3 (type: string), _col8 (type: string), _col9 (type: string), _col10 (type: string), _col11 (type: string), _col12 (type: string), _col13 (type: string), _col14 (type: string)
          TableScan
            alias: tbl5_1
            Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: NONE
            Filter Operator
              predicate: ((col1 = 'string0') and (col4 = 'string1') and (col5 = 'string1')) (type: boolean)
              Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: NONE
              Reduce Output Operator
                key expressions: col2 (type: string), col4 (type: string), col5 (type: string)
                sort order: +++
                Map-reduce partition columns: col2 (type: string), col4 (type: string), col5 (type: string)
                Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: NONE
      Reduce Operator Tree:
        Join Operator
          condition map:
               Left Outer Join0 to 1
          keys:
            0 _col7 (type: string), _col4 (type: string), _col5 (type: string)
            1 col2 (type: string), col4 (type: string), col5 (type: string)
          outputColumnNames: _col3, _col4, _col5, _col8, _col9, _col10, _col11, _col12, _col13, _col14
          Statistics: Num rows: 4 Data size: 0 Basic stats: PARTIAL Column stats: NONE
          File Output Operator
            compressed: false
            table:
                input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe

  Stage: Stage-6
    Map Reduce
      Map Operator Tree:
          TableScan
            Reduce Output Operator
              key expressions: _col8 (type: string), _col4 (type: string), _col5 (type: string)
              sort order: +++
              Map-reduce partition columns: _col8 (type: string), _col4 (type: string), _col5 (type: string)
              Statistics: Num rows: 4 Data size: 0 Basic stats: PARTIAL Column stats: NONE
              value expressions: _col3 (type: string), _col9 (type: string), _col10 (type: string), _col11 (type: string), _col12 (type: string), _col13 (type: string), _col14 (type: string)
          TableScan
            alias: tbl5_2
            Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: NONE
            Filter Operator
              predicate: ((col1 = 'string0') and (col4 = 'string1') and (col5 = 'string1')) (type: boolean)
              Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: NONE
              Reduce Output Operator
                key expressions: col2 (type: string), col4 (type: string), col5 (type: string)
                sort order: +++
                Map-reduce partition columns: col2 (type: string), col4 (type: string), col5 (type: string)
                Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: NONE
      Reduce Operator Tree:
        Join Operator
          condition map:
               Left Outer Join0 to 1
          keys:
            0 _col8 (type: string), _col4 (type: string), _col5 (type: string)
            1 col2 (type: string), col4 (type: string), col5 (type: string)
          outputColumnNames: _col3, _col4, _col5, _col9, _col10, _col11, _col12, _col13, _col14
          Statistics: Num rows: 4 Data size: 0 Basic stats: PARTIAL Column stats: NONE
          File Output Operator
            compressed: false
            table:
                input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe

  Stage: Stage-7
    Map Reduce
      Map Operator Tree:
          TableScan
            Reduce Output Operator
              key expressions: _col9 (type: string), _col4 (type: string), _col5 (type: string)
              sort order: +++
              Map-reduce partition columns: _col9 (type: string), _col4 (type: string), _col5 (type: string)
              Statistics: Num rows: 4 Data size: 0 Basic stats: PARTIAL Column stats: NONE
              value expressions: _col3 (type: string), _col10 (type: string), _col11 (type: string), _col12 (type: string), _col13 (type: string), _col14 (type: string)
          TableScan
            alias: tbl5_3
            Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: NONE
            Filter Operator
              predicate: ((col1 = 'string0') and (col4 = 'string1') and (col5 = 'string1')) (type: boolean)
              Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: NONE
              Reduce Output Operator
                key expressions: col2 (type: string), col4 (type: string), col5 (type: string)
                sort order: +++
                Map-reduce partition columns: col2 (type: string), col4 (type: string), col5 (type: string)
                Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: NONE
      Reduce Operator Tree:
        Join Operator
          condition map:
               Left Outer Join0 to 1
          keys:
            0 _col9 (type: string), _col4 (type: string), _col5 (type: string)
            1 col2 (type: string), col4 (type: string), col5 (type: string)
          outputColumnNames: _col3, _col4, _col5, _col10, _col11, _col12, _col13, _col14
          Statistics: Num rows: 4 Data size: 0 Basic stats: PARTIAL Column stats: NONE
          File Output Operator
            compressed: false
            table:
                input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe

  Stage: Stage-8
    Map Reduce
      Map Operator Tree:
          TableScan
            Reduce Output Operator
              key expressions: _col10 (type: string), _col4 (type: string), _col5 (type: string)
              sort order: +++
              Map-reduce partition columns: _col10 (type: string), _col4 (type: string), _col5 (type: string)
              Statistics: Num rows: 4 Data size: 0 Basic stats: PARTIAL Column stats: NONE
              value expressions: _col3 (type: string), _col11 (type: string), _col12 (type: string), _col13 (type: string), _col14 (type: string)
          TableScan
            alias: tbl5_4
            Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: NONE
            Filter Operator
              predicate: ((col1 = 'string0') and (col4 = 'string1') and (col5 = 'string1')) (type: boolean)
              Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: NONE
              Reduce Output Operator
                key expressions: col2 (type: string), col4 (type: string), col5 (type: string)
                sort order: +++
                Map-reduce partition columns: col2 (type: string), col4 (type: string), col5 (type: string)
                Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: NONE
      Reduce Operator Tree:
        Join Operator
          condition map:
               Left Outer Join0 to 1
          keys:
            0 _col10 (type: string), _col4 (type: string), _col5 (type: string)
            1 col2 (type: string), col4 (type: string), col5 (type: string)
          outputColumnNames: _col3, _col4, _col5, _col11, _col12, _col13, _col14
          Statistics: Num rows: 4 Data size: 0 Basic stats: PARTIAL Column stats: NONE
          File Output Operator
            compressed: false
            table:
                input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe

  Stage: Stage-9
    Map Reduce
      Map Operator Tree:
          TableScan
            Reduce Output Operator
              key expressions: _col11 (type: string), _col4 (type: string), _col5 (type: string)
              sort order: +++
              Map-reduce partition columns: _col11 (type: string), _col4 (type: string), _col5 (type: string)
              Statistics: Num rows: 4 Data size: 0 Basic stats: PARTIAL Column stats: NONE
              value expressions: _col3 (type: string), _col12 (type: string), _col13 (type: string), _col14 (type: string)
          TableScan
            alias: tbl5_5
            Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: NONE
            Filter Operator
              predicate: ((col1 = 'string0') and (col4 = 'string1') and (col5 = 'string1')) (type: boolean)
              Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: NONE
              Reduce Output Operator
                key expressions: col2 (type: string), col4 (type: string), col5 (type: string)
                sort order: +++
                Map-reduce partition columns: col2 (type: string), col4 (type: string), col5 (type: string)
                Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: NONE
      Reduce Operator Tree:
        Join Operator
          condition map:
               Left Outer Join0 to 1
          keys:
            0 _col11 (type: string), _col4 (type: string), _col5 (type: string)
            1 col2 (type: string), col4 (type: string), col5 (type: string)
          outputColumnNames: _col3, _col4, _col5, _col12, _col13, _col14
          Statistics: Num rows: 4 Data size: 0 Basic stats: PARTIAL Column stats: NONE
          File Output Operator
            compressed: false
            table:
                input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe

  Stage: Stage-10
    Map Reduce
      Map Operator Tree:
          TableScan
            Reduce Output Operator
              key expressions: _col12 (type: string), _col4 (type: string), _col5 (type: string)
              sort order: +++
              Map-reduce partition columns: _col12 (type: string), _col4 (type: string), _col5 (type: string)
              Statistics: Num rows: 4 Data size: 0 Basic stats: PARTIAL Column stats: NONE
              value expressions: _col3 (type: string), _col13 (type: string), _col14 (type: string)
          TableScan
            alias: tbl5_6
            Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: NONE
            Filter Operator
              predicate: ((col1 = 'string0') and (col4 = 'string1') and (col5 = 'string1')) (type: boolean)
              Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: NONE
              Reduce Output Operator
                key expressions: col2 (type: string), col4 (type: string), col5 (type: string)
                sort order: +++
                Map-reduce partition columns: col2 (type: string), col4 (type: string), col5 (type: string)
                Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: NONE
      Reduce Operator Tree:
        Join Operator
          condition map:
               Left Outer Join0 to 1
          keys:
            0 _col12 (type: string), _col4 (type: string), _col5 (type: string)
            1 col2 (type: string), col4 (type: string), col5 (type: string)
          outputColumnNames: _col3, _col4, _col5, _col13, _col14
          Statistics: Num rows: 4 Data size: 0 Basic stats: PARTIAL Column stats: NONE
          File Output Operator
            compressed: false
            table:
                input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe

  Stage: Stage-11
    Map Reduce
      Map Operator Tree:
          TableScan
            Reduce Output Operator
              key expressions: _col13 (type: string), _col4 (type: string), _col5 (type: string)
              sort order: +++
              Map-reduce partition columns: _col13 (type: string), _col4 (type: string), _col5 (type: string)
              Statistics: Num rows: 4 Data size: 0 Basic stats: PARTIAL Column stats: NONE
              value expressions: _col3 (type: string), _col14 (type: string)
          TableScan
            alias: tbl5_7
            Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: NONE
            Filter Operator
              predicate: ((col1 = 'string0') and (col4 = 'string1') and (col5 = 'string1')) (type: boolean)
              Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: NONE
              Reduce Output Operator
                key expressions: col2 (type: string), col4 (type: string), col5 (type: string)
                sort order: +++
                Map-reduce partition columns: col2 (type: string), col4 (type: string), col5 (type: string)
                Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: NONE
      Reduce Operator Tree:
        Join Operator
          condition map:
               Left Outer Join0 to 1
          keys:
            0 _col13 (type: string), _col4 (type: string), _col5 (type: string)
            1 col2 (type: string), col4 (type: string), col5 (type: string)
          outputColumnNames: _col3, _col4, _col5, _col14
          Statistics: Num rows: 4 Data size: 0 Basic stats: PARTIAL Column stats: NONE
          File Output Operator
            compressed: false
            table:
                input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe

  Stage: Stage-12
    Map Reduce
      Map Operator Tree:
          TableScan
            Reduce Output Operator
              key expressions: _col14 (type: string), _col4 (type: string), _col5 (type: string)
              sort order: +++
              Map-reduce partition columns: _col14 (type: string), _col4 (type: string), _col5 (type: string)
              Statistics: Num rows: 4 Data size: 0 Basic stats: PARTIAL Column stats: NONE
              value expressions: _col3 (type: string)
          TableScan
            alias: tbl5_8
            Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: NONE
            Filter Operator
              predicate: ((col1 = 'string0') and (col4 = 'string1') and (col5 = 'string1')) (type: boolean)
              Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: NONE
              Reduce Output Operator
                key expressions: col2 (type: string), col4 (type: string), col5 (type: string)
                sort order: +++
                Map-reduce partition columns: col2 (type: string), col4 (type: string), col5 (type: string)
                Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: NONE
      Reduce Operator Tree:
        Join Operator
          condition map:
               Left Outer Join0 to 1
          keys:
            0 _col14 (type: string), _col4 (type: string), _col5 (type: string)
            1 col2 (type: string), col4 (type: string), col5 (type: string)
          outputColumnNames: _col3, _col4, _col5
          Statistics: Num rows: 4 Data size: 0 Basic stats: PARTIAL Column stats: NONE
          File Output Operator
            compressed: false
            table:
                input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe

  Stage: Stage-13
    Map Reduce
      Map Operator Tree:
          TableScan
            Reduce Output Operator
              key expressions: _col3 (type: string), _col4 (type: string), _col5 (type: string)
              sort order: +++
              Map-reduce partition columns: _col3 (type: string), _col4 (type: string), _col5 (type: string)
              Statistics: Num rows: 4 Data size: 0 Basic stats: PARTIAL Column stats: NONE
          TableScan
            alias: tbl5_9
            Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: NONE
            Filter Operator
              predicate: ((col1 = 'string0') and (col4 = 'string1') and (col5 = 'string1')) (type: boolean)
              Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: NONE
              Reduce Output Operator
                key expressions: col2 (type: string), col4 (type: string), col5 (type: string)
                sort order: +++
                Map-reduce partition columns: col2 (type: string), col4 (type: string), col5 (type: string)
                Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: NONE
      Reduce Operator Tree:
        Join Operator
          condition map:
               Left Outer Join0 to 1
          keys:
            0 _col3 (type: string), _col4 (type: string), _col5 (type: string)
            1 col2 (type: string), col4 (type: string), col5 (type: string)
          Statistics: Num rows: 4 Data size: 0 Basic stats: PARTIAL Column stats: NONE
          Group By Operator
            aggregations: count()
            mode: hash
            outputColumnNames: _col0
            Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
            File Output Operator
              compressed: false
              table:
                  input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                  serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe

  Stage: Stage-14
    Map Reduce
      Map Operator Tree:
          TableScan
            Reduce Output Operator
              sort order: 
              Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
              value expressions: _col0 (type: bigint)
      Reduce Operator Tree:
        Group By Operator
          aggregations: count(VALUE._col0)
          mode: mergepartial
          outputColumnNames: _col0
          Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
          File Output Operator
            compressed: false
            Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
            table:
                input format: org.apache.hadoop.mapred.TextInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

