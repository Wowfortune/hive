PREHOOK: query: create table acidTbl(a int, b int) clustered by (a) into 2 buckets stored as orc TBLPROPERTIES ('transactional'='true')
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@acidTbl
POSTHOOK: query: create table acidTbl(a int, b int) clustered by (a) into 2 buckets stored as orc TBLPROPERTIES ('transactional'='true')
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@acidTbl
PREHOOK: query: create table nonAcidOrcTbl(a int, b int) clustered by (a) into 2 buckets stored as orc TBLPROPERTIES ('transactional'='false')
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@nonAcidOrcTbl
POSTHOOK: query: create table nonAcidOrcTbl(a int, b int) clustered by (a) into 2 buckets stored as orc TBLPROPERTIES ('transactional'='false')
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@nonAcidOrcTbl
PREHOOK: query: --expect a cardinality check because there is update and hive.merge.cardinality.check=true by default
explain merge into acidTbl as t using nonAcidOrcTbl s ON t.a = s.a 
WHEN MATCHED AND s.a > 8 THEN DELETE
WHEN MATCHED THEN UPDATE SET b = 7
WHEN NOT MATCHED THEN INSERT VALUES(s.a, s.b)
PREHOOK: type: QUERY
POSTHOOK: query: --expect a cardinality check because there is update and hive.merge.cardinality.check=true by default
explain merge into acidTbl as t using nonAcidOrcTbl s ON t.a = s.a 
WHEN MATCHED AND s.a > 8 THEN DELETE
WHEN MATCHED THEN UPDATE SET b = 7
WHEN NOT MATCHED THEN INSERT VALUES(s.a, s.b)
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-4 is a root stage
  Stage-5 depends on stages: Stage-4
  Stage-0 depends on stages: Stage-5
  Stage-6 depends on stages: Stage-0
  Stage-7 depends on stages: Stage-4
  Stage-2 depends on stages: Stage-7
  Stage-8 depends on stages: Stage-2
  Stage-9 depends on stages: Stage-4
  Stage-3 depends on stages: Stage-9
  Stage-10 depends on stages: Stage-3
  Stage-11 depends on stages: Stage-4
  Stage-1 depends on stages: Stage-11
  Stage-12 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-4
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: t
            Reduce Output Operator
              key expressions: a (type: int)
              sort order: +
              Map-reduce partition columns: a (type: int)
              value expressions: ROW__ID (type: struct<transactionid:bigint,bucketid:int,rowid:bigint>)
          TableScan
            alias: s
            Reduce Output Operator
              key expressions: a (type: int)
              sort order: +
              Map-reduce partition columns: a (type: int)
              value expressions: b (type: int)
      Reduce Operator Tree:
        Join Operator
          condition map:
               Right Outer Join0 to 1
          keys:
            0 a (type: int)
            1 a (type: int)
          outputColumnNames: _col0, _col4, _col5, _col6
          Filter Operator
            predicate: ((_col5 > 8) and (_col0 = _col5)) (type: boolean)
            Select Operator
              expressions: _col4 (type: struct<transactionid:bigint,bucketid:int,rowid:bigint>)
              outputColumnNames: _col0
              File Output Operator
                compressed: false
                table:
                    input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                    serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
          Filter Operator
            predicate: ((_col5 <= 8) and (_col0 = _col5)) (type: boolean)
            Select Operator
              expressions: _col4 (type: struct<transactionid:bigint,bucketid:int,rowid:bigint>), _col0 (type: int)
              outputColumnNames: _col0, _col1
              File Output Operator
                compressed: false
                table:
                    input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                    serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
          Filter Operator
            predicate: (_col0 = _col5) (type: boolean)
            Select Operator
              expressions: _col4 (type: struct<transactionid:bigint,bucketid:int,rowid:bigint>)
              outputColumnNames: _col4
              Group By Operator
                aggregations: count()
                keys: _col4 (type: struct<transactionid:bigint,bucketid:int,rowid:bigint>)
                mode: hash
                outputColumnNames: _col0, _col1
                File Output Operator
                  compressed: false
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
          Filter Operator
            predicate: _col0 is null (type: boolean)
            Select Operator
              expressions: _col5 (type: int), _col6 (type: int)
              outputColumnNames: _col0, _col1
              File Output Operator
                compressed: false
                table:
                    input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                    serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe

  Stage: Stage-5
    Map Reduce
      Map Operator Tree:
          TableScan
            Reduce Output Operator
              key expressions: _col0 (type: struct<transactionid:bigint,bucketid:int,rowid:bigint>)
              sort order: +
              Map-reduce partition columns: UDFToInteger(_col0) (type: int)
      Reduce Operator Tree:
        Select Operator
          expressions: KEY.reducesinkkey0 (type: struct<transactionid:bigint,bucketid:int,rowid:bigint>)
          outputColumnNames: _col0
          File Output Operator
            compressed: false
            table:
                input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
                serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde
                name: default.acidtbl

  Stage: Stage-0
    Move Operator
      tables:
          replace: false
          table:
              input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
              output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
              serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde
              name: default.acidtbl

  Stage: Stage-6
    Stats-Aggr Operator

  Stage: Stage-7
    Map Reduce
      Map Operator Tree:
          TableScan
            Reduce Output Operator
              key expressions: _col0 (type: struct<transactionid:bigint,bucketid:int,rowid:bigint>)
              sort order: +
              Map-reduce partition columns: UDFToInteger(_col0) (type: int)
              value expressions: _col1 (type: int)
      Reduce Operator Tree:
        Select Operator
          expressions: KEY.reducesinkkey0 (type: struct<transactionid:bigint,bucketid:int,rowid:bigint>), VALUE._col0 (type: int), 7 (type: int)
          outputColumnNames: _col0, _col1, _col2
          File Output Operator
            compressed: false
            table:
                input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
                serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde
                name: default.acidtbl

  Stage: Stage-2
    Move Operator
      tables:
          replace: false
          table:
              input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
              output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
              serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde
              name: default.acidtbl

  Stage: Stage-8
    Stats-Aggr Operator

  Stage: Stage-9
    Map Reduce
      Map Operator Tree:
          TableScan
            Reduce Output Operator
              key expressions: _col0 (type: struct<transactionid:bigint,bucketid:int,rowid:bigint>)
              sort order: +
              Map-reduce partition columns: _col0 (type: struct<transactionid:bigint,bucketid:int,rowid:bigint>)
              value expressions: _col1 (type: bigint)
      Reduce Operator Tree:
        Group By Operator
          aggregations: count(VALUE._col0)
          keys: KEY._col0 (type: struct<transactionid:bigint,bucketid:int,rowid:bigint>)
          mode: mergepartial
          outputColumnNames: _col0, _col1
          Filter Operator
            predicate: (_col1 > 1) (type: boolean)
            Select Operator
              expressions: cardinality_violation(_col0) (type: int)
              outputColumnNames: _col0
              File Output Operator
                compressed: false
                table:
                    input format: org.apache.hadoop.mapred.TextInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    name: default.merge_tmp_table

  Stage: Stage-3
    Move Operator
      tables:
          replace: false
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.merge_tmp_table

  Stage: Stage-10
    Stats-Aggr Operator

  Stage: Stage-11
    Map Reduce
      Map Operator Tree:
          TableScan
            Reduce Output Operator
              sort order: 
              Map-reduce partition columns: _col0 (type: int)
              value expressions: _col0 (type: int), _col1 (type: int)
      Reduce Operator Tree:
        Select Operator
          expressions: VALUE._col0 (type: int), VALUE._col1 (type: int)
          outputColumnNames: _col0, _col1
          File Output Operator
            compressed: false
            table:
                input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
                serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde
                name: default.acidtbl

  Stage: Stage-1
    Move Operator
      tables:
          replace: false
          table:
              input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
              output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
              serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde
              name: default.acidtbl

  Stage: Stage-12
    Stats-Aggr Operator

PREHOOK: query: --expect a cardinality check because there is update and hive.merge.cardinality.check=true
--this is to verify the plan when using inner join (vs usual ROJ)
explain merge into acidTbl as t using nonAcidOrcTbl s ON t.a = s.a 
WHEN MATCHED AND s.a > 9 THEN DELETE
WHEN MATCHED THEN UPDATE SET b = 11
PREHOOK: type: QUERY
POSTHOOK: query: --expect a cardinality check because there is update and hive.merge.cardinality.check=true
--this is to verify the plan when using inner join (vs usual ROJ)
explain merge into acidTbl as t using nonAcidOrcTbl s ON t.a = s.a 
WHEN MATCHED AND s.a > 9 THEN DELETE
WHEN MATCHED THEN UPDATE SET b = 11
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-3 is a root stage
  Stage-4 depends on stages: Stage-3
  Stage-0 depends on stages: Stage-4
  Stage-5 depends on stages: Stage-0
  Stage-6 depends on stages: Stage-3
  Stage-1 depends on stages: Stage-6
  Stage-7 depends on stages: Stage-1
  Stage-8 depends on stages: Stage-3
  Stage-2 depends on stages: Stage-8
  Stage-9 depends on stages: Stage-2

STAGE PLANS:
  Stage: Stage-3
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: t
            Filter Operator
              predicate: a is not null (type: boolean)
              Reduce Output Operator
                key expressions: a (type: int)
                sort order: +
                Map-reduce partition columns: a (type: int)
                value expressions: ROW__ID (type: struct<transactionid:bigint,bucketid:int,rowid:bigint>)
          TableScan
            alias: s
            Filter Operator
              predicate: a is not null (type: boolean)
              Reduce Output Operator
                key expressions: a (type: int)
                sort order: +
                Map-reduce partition columns: a (type: int)
      Reduce Operator Tree:
        Join Operator
          condition map:
               Inner Join 0 to 1
          keys:
            0 a (type: int)
            1 a (type: int)
          outputColumnNames: _col0, _col4, _col5
          Filter Operator
            predicate: ((_col5 > 9) and (_col0 = _col5)) (type: boolean)
            Select Operator
              expressions: _col4 (type: struct<transactionid:bigint,bucketid:int,rowid:bigint>)
              outputColumnNames: _col0
              File Output Operator
                compressed: false
                table:
                    input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                    serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
          Filter Operator
            predicate: ((_col5 <= 9) and (_col0 = _col5)) (type: boolean)
            Select Operator
              expressions: _col4 (type: struct<transactionid:bigint,bucketid:int,rowid:bigint>), _col0 (type: int)
              outputColumnNames: _col0, _col1
              File Output Operator
                compressed: false
                table:
                    input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                    serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
          Filter Operator
            predicate: (_col0 = _col5) (type: boolean)
            Select Operator
              expressions: _col4 (type: struct<transactionid:bigint,bucketid:int,rowid:bigint>)
              outputColumnNames: _col4
              Group By Operator
                aggregations: count()
                keys: _col4 (type: struct<transactionid:bigint,bucketid:int,rowid:bigint>)
                mode: hash
                outputColumnNames: _col0, _col1
                File Output Operator
                  compressed: false
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe

  Stage: Stage-4
    Map Reduce
      Map Operator Tree:
          TableScan
            Reduce Output Operator
              key expressions: _col0 (type: struct<transactionid:bigint,bucketid:int,rowid:bigint>)
              sort order: +
              Map-reduce partition columns: UDFToInteger(_col0) (type: int)
      Reduce Operator Tree:
        Select Operator
          expressions: KEY.reducesinkkey0 (type: struct<transactionid:bigint,bucketid:int,rowid:bigint>)
          outputColumnNames: _col0
          File Output Operator
            compressed: false
            table:
                input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
                serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde
                name: default.acidtbl

  Stage: Stage-0
    Move Operator
      tables:
          replace: false
          table:
              input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
              output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
              serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde
              name: default.acidtbl

  Stage: Stage-5
    Stats-Aggr Operator

  Stage: Stage-6
    Map Reduce
      Map Operator Tree:
          TableScan
            Reduce Output Operator
              key expressions: _col0 (type: struct<transactionid:bigint,bucketid:int,rowid:bigint>)
              sort order: +
              Map-reduce partition columns: UDFToInteger(_col0) (type: int)
              value expressions: _col1 (type: int)
      Reduce Operator Tree:
        Select Operator
          expressions: KEY.reducesinkkey0 (type: struct<transactionid:bigint,bucketid:int,rowid:bigint>), VALUE._col0 (type: int), 11 (type: int)
          outputColumnNames: _col0, _col1, _col2
          File Output Operator
            compressed: false
            table:
                input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
                serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde
                name: default.acidtbl

  Stage: Stage-1
    Move Operator
      tables:
          replace: false
          table:
              input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
              output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
              serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde
              name: default.acidtbl

  Stage: Stage-7
    Stats-Aggr Operator

  Stage: Stage-8
    Map Reduce
      Map Operator Tree:
          TableScan
            Reduce Output Operator
              key expressions: _col0 (type: struct<transactionid:bigint,bucketid:int,rowid:bigint>)
              sort order: +
              Map-reduce partition columns: _col0 (type: struct<transactionid:bigint,bucketid:int,rowid:bigint>)
              value expressions: _col1 (type: bigint)
      Reduce Operator Tree:
        Group By Operator
          aggregations: count(VALUE._col0)
          keys: KEY._col0 (type: struct<transactionid:bigint,bucketid:int,rowid:bigint>)
          mode: mergepartial
          outputColumnNames: _col0, _col1
          Filter Operator
            predicate: (_col1 > 1) (type: boolean)
            Select Operator
              expressions: cardinality_violation(_col0) (type: int)
              outputColumnNames: _col0
              File Output Operator
                compressed: false
                table:
                    input format: org.apache.hadoop.mapred.TextInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    name: default.merge_tmp_table

  Stage: Stage-2
    Move Operator
      tables:
          replace: false
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.merge_tmp_table

  Stage: Stage-9
    Stats-Aggr Operator

PREHOOK: query: --now we expect no cardinality check since only have insert clause
explain merge into acidTbl as t using nonAcidOrcTbl s ON t.a = s.a
WHEN NOT MATCHED THEN INSERT VALUES(s.a, s.b)
PREHOOK: type: QUERY
POSTHOOK: query: --now we expect no cardinality check since only have insert clause
explain merge into acidTbl as t using nonAcidOrcTbl s ON t.a = s.a
WHEN NOT MATCHED THEN INSERT VALUES(s.a, s.b)
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-0 depends on stages: Stage-2
  Stage-3 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: t
            Reduce Output Operator
              key expressions: a (type: int)
              sort order: +
              Map-reduce partition columns: a (type: int)
          TableScan
            alias: s
            Reduce Output Operator
              key expressions: a (type: int)
              sort order: +
              Map-reduce partition columns: a (type: int)
              value expressions: b (type: int)
      Reduce Operator Tree:
        Join Operator
          condition map:
               Right Outer Join0 to 1
          keys:
            0 a (type: int)
            1 a (type: int)
          outputColumnNames: _col0, _col5, _col6
          Filter Operator
            predicate: _col0 is null (type: boolean)
            Select Operator
              expressions: _col5 (type: int), _col6 (type: int)
              outputColumnNames: _col0, _col1
              File Output Operator
                compressed: false
                table:
                    input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                    serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe

  Stage: Stage-2
    Map Reduce
      Map Operator Tree:
          TableScan
            Reduce Output Operator
              sort order: 
              Map-reduce partition columns: _col0 (type: int)
              value expressions: _col0 (type: int), _col1 (type: int)
      Reduce Operator Tree:
        Select Operator
          expressions: VALUE._col0 (type: int), VALUE._col1 (type: int)
          outputColumnNames: _col0, _col1
          File Output Operator
            compressed: false
            table:
                input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
                serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde
                name: default.acidtbl

  Stage: Stage-0
    Move Operator
      tables:
          replace: false
          table:
              input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
              output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
              serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde
              name: default.acidtbl

  Stage: Stage-3
    Stats-Aggr Operator

