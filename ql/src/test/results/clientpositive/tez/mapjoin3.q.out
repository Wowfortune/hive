PREHOOK: query: DROP TABLE IF EXISTS test_1
PREHOOK: type: DROPTABLE
POSTHOOK: query: DROP TABLE IF EXISTS test_1
POSTHOOK: type: DROPTABLE
PREHOOK: query: CREATE TABLE test_1 
( 
member BIGINT 
, age VARCHAR (100) 
) 
STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@test_1
POSTHOOK: query: CREATE TABLE test_1 
( 
member BIGINT 
, age VARCHAR (100) 
) 
STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@test_1
PREHOOK: query: DROP TABLE IF EXISTS test_2
PREHOOK: type: DROPTABLE
POSTHOOK: query: DROP TABLE IF EXISTS test_2
POSTHOOK: type: DROPTABLE
PREHOOK: query: CREATE TABLE test_2 
( 
member BIGINT 
) 
STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@test_2
POSTHOOK: query: CREATE TABLE test_2 
( 
member BIGINT 
) 
STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@test_2
PREHOOK: query: INSERT INTO test_1 VALUES (1, '20'), (2, '30'), (3, '40')
PREHOOK: type: QUERY
PREHOOK: Input: default@values__tmp__table__1
PREHOOK: Output: default@test_1
POSTHOOK: query: INSERT INTO test_1 VALUES (1, '20'), (2, '30'), (3, '40')
POSTHOOK: type: QUERY
POSTHOOK: Input: default@values__tmp__table__1
POSTHOOK: Output: default@test_1
POSTHOOK: Lineage: test_1.age EXPRESSION [(values__tmp__table__1)values__tmp__table__1.FieldSchema(name:tmp_values_col2, type:string, comment:), ]
POSTHOOK: Lineage: test_1.member EXPRESSION [(values__tmp__table__1)values__tmp__table__1.FieldSchema(name:tmp_values_col1, type:string, comment:), ]
PREHOOK: query: INSERT INTO test_2 VALUES (1), (2), (3)
PREHOOK: type: QUERY
PREHOOK: Input: default@values__tmp__table__2
PREHOOK: Output: default@test_2
POSTHOOK: query: INSERT INTO test_2 VALUES (1), (2), (3)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@values__tmp__table__2
POSTHOOK: Output: default@test_2
POSTHOOK: Lineage: test_2.member EXPRESSION [(values__tmp__table__2)values__tmp__table__2.FieldSchema(name:tmp_values_col1, type:string, comment:), ]
PREHOOK: query: EXPLAIN
SELECT 
t2.member 
, t1.age_1 
, t1.age_2 
FROM 
test_2 t2 
LEFT JOIN ( 
SELECT 
member 
, age as age_1 
, age as age_2 
FROM 
test_1 
) t1 
ON t2.member = t1.member
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN
SELECT 
t2.member 
, t1.age_1 
, t1.age_2 
FROM 
test_2 t2 
LEFT JOIN ( 
SELECT 
member 
, age as age_1 
, age as age_2 
FROM 
test_1 
) t1 
ON t2.member = t1.member
POSTHOOK: type: QUERY
Plan not optimized by CBO due to missing statistics. Please check log for more details.

Vertex dependency in root stage
Map 2 <- Map 1 (BROADCAST_EDGE)

Stage-0
   Fetch Operator
      limit:-1
      Stage-1
         Map 2
         File Output Operator [FS_7]
            compressed:false
            Statistics:Num rows: 3 Data size: 3 Basic stats: COMPLETE Column stats: NONE
            table:{"serde:":"org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe","input format:":"org.apache.hadoop.mapred.TextInputFormat","output format:":"org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat"}
            Select Operator [SEL_6]
               outputColumnNames:["_col0","_col1","_col2"]
               Statistics:Num rows: 3 Data size: 3 Basic stats: COMPLETE Column stats: NONE
               Map Join Operator [MAPJOIN_10]
               |  condition map:[{"":"Left Outer Join0 to 1"}]
               |  HybridGraceHashJoin:true
               |  keys:{"Map 1":"_col0 (type: bigint)","Map 2":"member (type: bigint)"}
               |  outputColumnNames:["_col0","_col5","_col6"]
               |  Statistics:Num rows: 3 Data size: 3 Basic stats: COMPLETE Column stats: NONE
               |<-Map 1 [BROADCAST_EDGE]
               |  Reduce Output Operator [RS_4]
               |     key expressions:_col0 (type: bigint)
               |     Map-reduce partition columns:_col0 (type: bigint)
               |     sort order:+
               |     Statistics:Num rows: 3 Data size: 12 Basic stats: COMPLETE Column stats: NONE
               |     value expressions:_col1 (type: varchar(100)), _col2 (type: varchar(100))
               |     Select Operator [SEL_1]
               |        outputColumnNames:["_col0","_col1","_col2"]
               |        Statistics:Num rows: 3 Data size: 12 Basic stats: COMPLETE Column stats: NONE
               |        TableScan [TS_0]
               |           alias:test_1
               |           Statistics:Num rows: 3 Data size: 12 Basic stats: COMPLETE Column stats: NONE
               |<-TableScan [TS_2]
                     alias:t2
                     Statistics:Num rows: 3 Data size: 3 Basic stats: COMPLETE Column stats: NONE

PREHOOK: query: SELECT 
t2.member 
, t1.age_1 
, t1.age_2 
FROM 
test_2 t2 
LEFT JOIN ( 
SELECT 
member 
, age as age_1 
, age as age_2 
FROM 
test_1 
) t1 
ON t2.member = t1.member
PREHOOK: type: QUERY
PREHOOK: Input: default@test_1
PREHOOK: Input: default@test_2
#### A masked pattern was here ####
POSTHOOK: query: SELECT 
t2.member 
, t1.age_1 
, t1.age_2 
FROM 
test_2 t2 
LEFT JOIN ( 
SELECT 
member 
, age as age_1 
, age as age_2 
FROM 
test_1 
) t1 
ON t2.member = t1.member
POSTHOOK: type: QUERY
POSTHOOK: Input: default@test_1
POSTHOOK: Input: default@test_2
#### A masked pattern was here ####
1	20	20
3	40	40
2	30	30
