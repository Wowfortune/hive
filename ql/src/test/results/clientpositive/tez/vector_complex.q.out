PREHOOK: query: create table vectortab2k(
            t tinyint,
            si smallint,
            i int,
            b bigint,
            f float,
            d double,
            dc decimal(38,18),
            bo boolean,
            s string,
            s2 string,
            ts timestamp,
            ts2 timestamp,
            dt date)
ROW FORMAT DELIMITED FIELDS TERMINATED BY '|'
STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@vectortab2k
POSTHOOK: query: create table vectortab2k(
            t tinyint,
            si smallint,
            i int,
            b bigint,
            f float,
            d double,
            dc decimal(38,18),
            bo boolean,
            s string,
            s2 string,
            ts timestamp,
            ts2 timestamp,
            dt date)
ROW FORMAT DELIMITED FIELDS TERMINATED BY '|'
STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@vectortab2k
PREHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/vectortab2k' OVERWRITE INTO TABLE vectortab2k
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@vectortab2k
POSTHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/vectortab2k' OVERWRITE INTO TABLE vectortab2k
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@vectortab2k
PREHOOK: query: create table vectortab2korc(
            t tinyint,
            si smallint,
            i int,
            b bigint,
            f float,
            d double,
            dc decimal(38,18),
            bo boolean,
            s string,
            s2 string,
            ts timestamp,
            ts2 timestamp,
            dt date)
STORED AS ORC
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@vectortab2korc
POSTHOOK: query: create table vectortab2korc(
            t tinyint,
            si smallint,
            i int,
            b bigint,
            f float,
            d double,
            dc decimal(38,18),
            bo boolean,
            s string,
            s2 string,
            ts timestamp,
            ts2 timestamp,
            dt date)
STORED AS ORC
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@vectortab2korc
PREHOOK: query: INSERT INTO TABLE vectortab2korc SELECT * FROM vectortab2k
PREHOOK: type: QUERY
PREHOOK: Input: default@vectortab2k
PREHOOK: Output: default@vectortab2korc
POSTHOOK: query: INSERT INTO TABLE vectortab2korc SELECT * FROM vectortab2k
POSTHOOK: type: QUERY
POSTHOOK: Input: default@vectortab2k
POSTHOOK: Output: default@vectortab2korc
POSTHOOK: Lineage: vectortab2korc.b SIMPLE [(vectortab2k)vectortab2k.FieldSchema(name:b, type:bigint, comment:null), ]
POSTHOOK: Lineage: vectortab2korc.bo SIMPLE [(vectortab2k)vectortab2k.FieldSchema(name:bo, type:boolean, comment:null), ]
POSTHOOK: Lineage: vectortab2korc.d SIMPLE [(vectortab2k)vectortab2k.FieldSchema(name:d, type:double, comment:null), ]
POSTHOOK: Lineage: vectortab2korc.dc SIMPLE [(vectortab2k)vectortab2k.FieldSchema(name:dc, type:decimal(38,18), comment:null), ]
POSTHOOK: Lineage: vectortab2korc.dt SIMPLE [(vectortab2k)vectortab2k.FieldSchema(name:dt, type:date, comment:null), ]
POSTHOOK: Lineage: vectortab2korc.f SIMPLE [(vectortab2k)vectortab2k.FieldSchema(name:f, type:float, comment:null), ]
POSTHOOK: Lineage: vectortab2korc.i SIMPLE [(vectortab2k)vectortab2k.FieldSchema(name:i, type:int, comment:null), ]
POSTHOOK: Lineage: vectortab2korc.s SIMPLE [(vectortab2k)vectortab2k.FieldSchema(name:s, type:string, comment:null), ]
POSTHOOK: Lineage: vectortab2korc.s2 SIMPLE [(vectortab2k)vectortab2k.FieldSchema(name:s2, type:string, comment:null), ]
POSTHOOK: Lineage: vectortab2korc.si SIMPLE [(vectortab2k)vectortab2k.FieldSchema(name:si, type:smallint, comment:null), ]
POSTHOOK: Lineage: vectortab2korc.t SIMPLE [(vectortab2k)vectortab2k.FieldSchema(name:t, type:tinyint, comment:null), ]
POSTHOOK: Lineage: vectortab2korc.ts SIMPLE [(vectortab2k)vectortab2k.FieldSchema(name:ts, type:timestamp, comment:null), ]
POSTHOOK: Lineage: vectortab2korc.ts2 SIMPLE [(vectortab2k)vectortab2k.FieldSchema(name:ts2, type:timestamp, comment:null), ]
PREHOOK: query: create temporary table temptable1 (
                     t tinyint,
                     si smallint,
                     i int,
                     b bigint,
                     f float,
                     d double,
                     dc decimal(38,18),
                     bo boolean,
                     s string,
                     vc varchar(50),
                     ch char(50),
                     ts timestamp,
                     dt date,
                     ar array<int>,
                     st struct<col1:string,col2:int>,
                     ma map<string, int>
                   ) stored as orc
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@temptable1
POSTHOOK: query: create temporary table temptable1 (
                     t tinyint,
                     si smallint,
                     i int,
                     b bigint,
                     f float,
                     d double,
                     dc decimal(38,18),
                     bo boolean,
                     s string,
                     vc varchar(50),
                     ch char(50),
                     ts timestamp,
                     dt date,
                     ar array<int>,
                     st struct<col1:string,col2:int>,
                     ma map<string, int>
                   ) stored as orc
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@temptable1
PREHOOK: query: explain
insert overwrite table temptable1
                     select t, si, i, b, f, d, dc, bo, s, s, s, ts, dt,
                     array(i, i+1), struct(s, i), map(s, i) from vectortab2korc where s='mathematics'
PREHOOK: type: QUERY
POSTHOOK: query: explain
insert overwrite table temptable1
                     select t, si, i, b, f, d, dc, bo, s, s, s, ts, dt,
                     array(i, i+1), struct(s, i), map(s, i) from vectortab2korc where s='mathematics'
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-0 depends on stages: Stage-2
  Stage-3 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: vectortab2korc
                  Statistics: Num rows: 2000 Data size: 918712 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: (s = 'mathematics') (type: boolean)
                    Statistics: Num rows: 1000 Data size: 459356 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: t (type: tinyint), si (type: smallint), i (type: int), b (type: bigint), f (type: float), d (type: double), dc (type: decimal(38,18)), bo (type: boolean), 'mathematics' (type: string), 'mathematics' (type: varchar(50)), 'mathematics                                       ' (type: char(50)), ts (type: timestamp), dt (type: date), array(i,(i + 1)) (type: array<int>), struct('mathematics',i) (type: struct<col1:string,col2:int>), map('mathematics':i) (type: map<string,int>)
                      outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15
                      Statistics: Num rows: 1000 Data size: 459356 Basic stats: COMPLETE Column stats: NONE
                      File Output Operator
                        compressed: false
                        Statistics: Num rows: 1000 Data size: 459356 Basic stats: COMPLETE Column stats: NONE
                        table:
                            input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                            output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
                            serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde
                            name: default.temptable1

  Stage: Stage-2
    Dependency Collection

  Stage: Stage-0
    Move Operator
      tables:
          replace: true
          table:
              input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
              output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
              serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde
              name: default.temptable1

  Stage: Stage-3
    Stats-Aggr Operator

PREHOOK: query: explain
select count(*) from temptable1
PREHOOK: type: QUERY
POSTHOOK: query: explain
select count(*) from temptable1
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: temptable1
                  Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: COMPLETE
                  Select Operator
                    Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: COMPLETE
                    Group By Operator
                      aggregations: count()
                      mode: hash
                      outputColumnNames: _col0
                      Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        sort order: 
                        Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                        value expressions: _col0 (type: bigint)
            Execution mode: vectorized
        Reducer 2 
            Reduce Operator Tree:
              Group By Operator
                aggregations: count(VALUE._col0)
                mode: mergepartial
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                  table:
                      input format: org.apache.hadoop.mapred.TextInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
            Execution mode: vectorized

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: insert overwrite table temptable1
                     select t, si, i, b, f, d, dc, bo, s, s, s, ts, dt,
                     array(i, i+1), struct(s, i), map(s, i) from vectortab2korc where s='mathematics'
PREHOOK: type: QUERY
PREHOOK: Input: default@vectortab2korc
PREHOOK: Output: default@temptable1
POSTHOOK: query: insert overwrite table temptable1
                     select t, si, i, b, f, d, dc, bo, s, s, s, ts, dt,
                     array(i, i+1), struct(s, i), map(s, i) from vectortab2korc where s='mathematics'
POSTHOOK: type: QUERY
POSTHOOK: Input: default@vectortab2korc
POSTHOOK: Output: default@temptable1
POSTHOOK: Lineage: temptable1.ar EXPRESSION [(vectortab2korc)vectortab2korc.FieldSchema(name:i, type:int, comment:null), ]
POSTHOOK: Lineage: temptable1.b SIMPLE [(vectortab2korc)vectortab2korc.FieldSchema(name:b, type:bigint, comment:null), ]
POSTHOOK: Lineage: temptable1.bo SIMPLE [(vectortab2korc)vectortab2korc.FieldSchema(name:bo, type:boolean, comment:null), ]
POSTHOOK: Lineage: temptable1.ch EXPRESSION [(vectortab2korc)vectortab2korc.FieldSchema(name:s, type:string, comment:null), ]
POSTHOOK: Lineage: temptable1.d SIMPLE [(vectortab2korc)vectortab2korc.FieldSchema(name:d, type:double, comment:null), ]
POSTHOOK: Lineage: temptable1.dc SIMPLE [(vectortab2korc)vectortab2korc.FieldSchema(name:dc, type:decimal(38,18), comment:null), ]
POSTHOOK: Lineage: temptable1.dt SIMPLE [(vectortab2korc)vectortab2korc.FieldSchema(name:dt, type:date, comment:null), ]
POSTHOOK: Lineage: temptable1.f SIMPLE [(vectortab2korc)vectortab2korc.FieldSchema(name:f, type:float, comment:null), ]
POSTHOOK: Lineage: temptable1.i SIMPLE [(vectortab2korc)vectortab2korc.FieldSchema(name:i, type:int, comment:null), ]
POSTHOOK: Lineage: temptable1.ma EXPRESSION [(vectortab2korc)vectortab2korc.FieldSchema(name:s, type:string, comment:null), (vectortab2korc)vectortab2korc.FieldSchema(name:i, type:int, comment:null), ]
POSTHOOK: Lineage: temptable1.s SIMPLE [(vectortab2korc)vectortab2korc.FieldSchema(name:s, type:string, comment:null), ]
POSTHOOK: Lineage: temptable1.si SIMPLE [(vectortab2korc)vectortab2korc.FieldSchema(name:si, type:smallint, comment:null), ]
POSTHOOK: Lineage: temptable1.st EXPRESSION [(vectortab2korc)vectortab2korc.FieldSchema(name:s, type:string, comment:null), (vectortab2korc)vectortab2korc.FieldSchema(name:i, type:int, comment:null), ]
POSTHOOK: Lineage: temptable1.t SIMPLE [(vectortab2korc)vectortab2korc.FieldSchema(name:t, type:tinyint, comment:null), ]
POSTHOOK: Lineage: temptable1.ts SIMPLE [(vectortab2korc)vectortab2korc.FieldSchema(name:ts, type:timestamp, comment:null), ]
POSTHOOK: Lineage: temptable1.vc EXPRESSION [(vectortab2korc)vectortab2korc.FieldSchema(name:s, type:string, comment:null), ]
PREHOOK: query: select count(*) from temptable1
PREHOOK: type: QUERY
PREHOOK: Input: default@temptable1
#### A masked pattern was here ####
POSTHOOK: query: select count(*) from temptable1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@temptable1
#### A masked pattern was here ####
75
